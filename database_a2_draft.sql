CREATE TABLE IF NOT EXISTS COMPANY
    (
        COMPANY_ID INTEGER PRIMARY KEY NOT NULL,
        NAME VARCHAR(30) NOT NULL,
        CEO_lname VARCHAR(20),
        CEO_fname VARCHAR(20)
    );

CREATE TABLE IF NOT EXISTS MUTUAL_FUND 
    (
        SYMBOL CHAR(3) PRIMARY KEY,
        M_NAME VARCHAR(10) NOT NULL,
        DESCRIPTION VARCHAR(30),
        CATEGORY VARCHAR(10),
        T_NUM_SHARES INTEGER,
        C_DATE DATE NOT NULL,
        COMPANY_ID INTEGER REFERENCES COMPANY ON DELETE CASCADE 
    );


CREATE TABLE IF NOT EXISTS closing_price
(
    PRICE INTEGER,
    P_DATE DATE NOT NULL,
    SYMBOL CHAR(3) REFERENCES MUTUAL_FUND,
    PRIMARY KEY (P_DATE,SYMBOL)
);

CREATE TABLE IF NOT EXISTS "LOCATION"
    (
    STATE VARCHAR(3) DEFAULT 'NSW',  
        CITY VARCHAR(10),
        POSTCODE VARCHAR(5),
        COMPANY_ID INTEGER REFERENCES COMPANY ON DELETE CASCADE,
        PRIMARY KEY (COMPANY_ID)
    );



CREATE TABLE IF NOT EXISTS USERS
    (
        LOGIN VARCHAR(30) PRIMARY KEY,
        EMAIL VARCHAR(30),
        NAME VARCHAR(30),
        ADDRESS VARCHAR(50),
        PASSWORD VARCHAR(15)
    );

CREATE TABLE IF NOT EXISTS CUSTOMER
    (
        CUSTOMER_ID VARCHAR(30) REFERENCES USERS(LOGIN) PRIMARY KEY,
        BALANCES FLOAT
    );


CREATE TABLE IF NOT EXISTS R_PREFER
    (
        SYMBOL CHAR(3), 
        COMPANY_ID INTEGER, 
        PERCENTAGE INTEGER,   
        CUSTOMER_ID VARCHAR(30), 
        PRIMARY KEY (SYMBOL, COMPANY_ID, CUSTOMER_ID) 
    );

CREATE TABLE IF NOT EXISTS R_OWNS
    (
        SYMBOL CHAR(3), 
        COMPANY_ID INTEGER, 
        SHARES INTEGER,   
        CUSTOMER_ID VARCHAR(30), 
        PRIMARY KEY (SYMBOL, COMPANY_ID, CUSTOMER_ID) 
    );

CREATE TABLE IF NOT EXISTS R_PROFOLIO_ACTION
    (
        SYMBOL CHAR(3), 
        COMPANY_ID INTEGER, 
        SHARES INTEGER,  
        t_date DATE NOT NULL,
        PRICE INTEGER,
        AMOUNT INTEGER,
        NUM_SHARES INTEGER,
        ACTION VARCHAR (10),
        CUSTOMER_ID VARCHAR(30), 
        TRANS_ID INTEGER,
        PRIMARY KEY (SYMBOL, COMPANY_ID, CUSTOMER_ID, TRANS_ID),
        CHECK (AMOUNT = NUM_SHARES),  
        CHECK (ACTION = 'sell' or ACTION = 'buy') 
    );


CREATE TABLE IF NOT EXISTS ADMINISTRATOR
    (
        ADMINISTRATOR_ID VARCHAR(30) REFERENCES USERS(LOGIN) PRIMARY KEY
    );

CREATE TABLE TRANSACTIONS
    (
        TRANS_ID INTEGER PRIMARY KEY
    );

CREATE TABLE INV_TRANS
    (
        TRANS_ID INTEGER REFERENCES TRANSACTIONS PRIMARY KEY
    );

CREATE TABLE DEP_TRANS
    (
        TRANS_ID INTEGER REFERENCES TRANSACTIONS PRIMARY KEY
    );

CREATE TABLE R_DEPOSIT_TRANS
    (
        TRANS_ID INTEGER,
        CUSTOMER_ID INTEGER,
        t_date DATE NOT NULL,
        AMOUNT INTEGER,
        PRIMARY KEY (TRANS_ID, CUSTOMER_ID)
    );
